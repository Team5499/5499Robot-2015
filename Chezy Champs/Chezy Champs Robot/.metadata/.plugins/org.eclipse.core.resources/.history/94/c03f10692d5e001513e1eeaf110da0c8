
package org.usfirst.frc.team5499.robot;


import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.SampleRobot;

/**
 * This is a demo program showing the use of the RobotDrive class.
 * The SampleRobot class is the base of a robot application that will automatically call your
 * Autonomous and OperatorControl methods at the right time as controlled by the switches on
 * the driver station or the field controls.
 *
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the SampleRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 *
 * WARNING: While it may look like a good choice to use for your code if you're inexperienced,
 * don't. Unless you know what you are doing, complex code will be much more difficult under
 * this system. Use IterativeRobot or Command-Based instead if you're new.
 */
public class Robot extends SampleRobot {
	
	//MOTORS
    private final CANTalon leftMotorF;
    private final CANTalon leftMotorB;
    private final CANTalon rightMotorF;
    private final CANTalon rightMotorB;
    private final CANTalon elevatorMotorF;
    private final CANTalon elevatorMotorB;
    private final CANTalon conveyorMotorL;
    private final CANTalon conveyorMotorR;
    //STICK CONTROLL
    private Joystick stick;

    public Robot() {
        stick = new Joystick(0);
        leftMotorF = new CANTalon(5);
        leftMotorB = new CANTalon(8);
        rightMotorF = new CANTalon(1);
        rightMotorB = new CANTalon(3);
        elevatorMotorF = new CANTalon(6);
        elevatorMotorB = new CANTalon(7);
        conveyorMotorL = new CANTalon(2);
        conveyorMotorR = new CANTalon(4);
    }

    /**
     * Drive left & right motors for 2 seconds then stop
     */
    public void autonomous() {
    }

    /**
     * Runs the motors with arcade steering. //Teleop
     */
    public void operatorControl() {
        while (isOperatorControl() && isEnabled()) {
        	
        	leftMotorF.set(-1 * stick.getRawAxis(1));
        	leftMotorB.set(-1 * stick.getRawAxis(1));
        	rightMotorF.set(stick.getRawAxis(5));
        	rightMotorB.set(stick.getRawAxis(5));
        	if(stick.getRawAxis(2) > 0.1){
        		elevatorMotorF.set(-stick.getRawAxis(2));
        		elevatorMotorB.set(-stick.getRawAxis(2));
        	}
        	else if(stick.getRawAxis(3) > 0.1){
        		elevatorMotorF.set(stick.getRawAxis(3));
        		elevatorMotorB.set(stick.getRawAxis(3));
        	} else{
        		elevatorMotorF.set(0.0);
        		elevatorMotorB.set(0.0);
        	}
        		
        	if(stick.getRawButton(3)){
        		conveyorMotorL.set(1);
        		conveyorMotorR.set(1);
        	} else{
        		conveyorMotorL.set(0.0);
        		conveyorMotorR.set(0.0);
        	}        	
        }
    }

    /**
     * Runs during test mode
     */
    public void test() {
    }
}
